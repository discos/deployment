#!/usr/bin/env python
"""Some command line examples:

  $ discos-vms start -m manager
  $ discos-vms restart -m console storage
  $ discos-vms stop -m storage
  $ discos-vms status
"""
import sys
from argparse import ArgumentParser
import deployment

machines = deployment.machineList()

def check_machine(machine):
    if machine not in machines:
        deployment.error(
            'machine %s unknown!' % machine,
            choices=machines,
            name='machine'
        )
    else:
        return machine

parser = ArgumentParser()
parser.add_argument(
    'action',
    choices=['status', 'start', 'stop', 'restart'],
)
help_msg = (
)
parser.add_argument(
    '-m', '--machine',
    nargs='*',
    type=check_machine,
    help=(
        f'the machine you want to control. '
        f'Leave this field empty to select all available machines.'
    ),
    choices=machines
)
args = parser.parse_args()

if len(machines) == 0:
    print('No machine currently deployed.\n')
    parser.print_help()
    sys.exit()

if not args.machine:
    args.machine = deployment.machineList()

if 'storage' in args.machine and len(args.machine) > 1:
    args.machine.insert(0, args.machine.pop(args.machine.index('storage')))

if args.action == 'stop':
    args.machine.reverse()

for machine in args.machine:
    if args.action == 'status':
        status_msg = 'Machine {} status: '.format(machine)
        if deployment.isRunning(machine):
            status_msg += 'running.'
        else:
            status_msg += 'powered off.'
        print(status_msg)
    elif args.action == 'start':
        deployment.startVm(machine)
    elif args.action == 'stop':
        deployment.stopVm(machine)
    elif args.action == 'restart':
        deployment.restartVm(machine)
