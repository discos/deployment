---

- name: Add the acs group
  become: true
  group: name=acs gid=335 state=present


- name: Create the /discos directory
  file:
    path: /discos
    state: directory
    mode: 0755


- name: Retrieve the typed discos password
  set_fact:
    discos_pwd: "{{ lookup('env', 'DISCOS_PWD') }}"


- name: Add the user {{ user }}
  become: true
  user:
    name: "{{ user }}"
    password: "{{ discos_pwd | password_hash('md5', user[:8]) }}"
    group: acs
    uid: 3060
    home: "/discos/{{ user }}"
    state: present
    generate_ssh_key: yes
    ssh_key_file: .ssh/id_rsa
  when: discos_pwd != ""


- name: Add the user {{ user }} to sudoers
  become: true
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: '{{ user }}    ALL=(ALL)       ALL'


- name: Populate the /discos/ directory tree
  file:
    path: "/discos/{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: acs
    mode: 0750
    recurse: yes
    follow: yes
  with_items:
    - "config/discos"
    - "introots"


- name: Copy the bashrc template to /discos/config
  template:
    src: bashrc
    dest: /discos/config/discos/bashrc
    owner: "{{ user }}"
    group: acs
    mode: 0644
    force: yes
  become: true
  become_user: "{{ user }}"


- name: Copy prompt_command.sh
  become: true
  become_user: "{{ user }}"
  template:
    src: prompt_command.sh
    dest: /discos/config/discos/prompt_command.sh
    owner: "{{ user }}"
    group: acs
    mode: 0644
    force: yes


- name: Add the custom bashrc sourcing to the default one
  blockinfile:
    path: "/discos/{{ user }}/.bashrc"
    state: present
    marker: "######## DISCOS configuration {mark} ########"
    block: |
        if [ -f /discos/config/discos/bashrc ]; then
            source /discos/config/discos/bashrc
        fi


- name: Create the .ssh/known_hosts file
  file:
    path: /discos/{{ user }}/.ssh/known_hosts
    state: touch
    owner: "{{ user }}"
    group: acs
    mode: 0600


- name: Removing old public keys from known_hosts file
  become: true
  become_user: "{{ user }}"
  become_flags: "-i"
  command: ssh-keygen -R {{ hostvars[item].ansible_host }}
  with_items: "{{ play_hosts }}"


- name: Adding new public keys to known_hosts file
  become: true
  become_user: "{{ user }}"
  become_flags: "-i"
  shell: ssh-keyscan {{ hostvars[item].inventory_hostname }},{{ hostvars[item].inventory_hostname_short }},{{ hostvars[item].ansible_host }} >> /discos/{{ user }}/.ssh/known_hosts
  with_items: "{{ play_hosts }}"


- name: Sharing public key with all machines in current deployment session
  become: true
  become_user: "{{ user }}"
  become_flags: "-i"
  command: sshpass -p {{ discos_pwd }} ssh-copy-id {{ user }}@{{ item }}
  with_items: "{{ play_hosts }}"
  when: discos_pwd != ""
