---

- name: Set some variables
  set_fact:
    git_dir: /usr/local/git


- name: Check if git has been installed
  stat: path={{ git_dir }}
  register: git_exists


- name: Download Git
  get_url:
    url: "{{ git_orig.base }}/{{ git_orig.version }}/{{ git_orig.extension }}"
    dest: "{{ local_repository_path }}/{{ git_dest.file }}"
  when: git_exists.stat.exists == False
  delegate_to: 127.0.0.1


- name: Clean the build directory
  become: True
  file: path={{ item }} state=absent
  with_items:
    - "{{ remote_build_path }}"
  when: git_exists.stat.exists == False


- name: Create a temporary directory for the Git build
  become: True
  file:
    path: "{{ remote_build_path }}"
    state: directory
    owner: "{{ user }}"
    group: acs
    mode: 0770
    recurse: yes
  when: git_exists.stat.exists == False


- name: Copy {{ git_dest.file }} to the remote
  become: True
  copy:
    src: "{{ local_repository_path }}/{{ git_dest.file }}"
    dest: "{{ remote_build_path }}"
  when: git_exists.stat.exists == False


- name: Extract the Git archive
  become: True
  unarchive:
    src: "{{ remote_build_path }}/{{ git_dest.file }}"
    dest: "{{ remote_build_path }}"
    remote_src: yes
  when: git_exists.stat.exists == False


- name: Remove the git package
  become: True
  yum: name=git state=absent


- name: Install Git from sources
  become: True
  command: "chdir={{ remote_build_path }}/git-{{ git_orig.version }} {{ item }}"
  with_items:
    - make prefix={{ git_dir }} all
    - make prefix={{ git_dir }} install
  when: git_exists.stat.exists == False


- name: Add git to the PATH
  become: True
  lineinfile:
    dest: /etc/bashrc
    line: 'PATH=$PATH:{{ git_dir }}/bin'


- name: Remove the directory used for the build
  become: True
  file: path={{ item }} state=absent
  with_items:
    - "{{ remote_build_path }}"
