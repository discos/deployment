---

- set_fact:
    cfitsio: { file: 'cfitsio3370.tar.gz', build_dir: 'cfitsio' }
    ccfits: { file: 'CCfits-2.4.tar.gz', build_dir: 'CCfits' }


- name: Check if {{ cfitsio.file }} is installed
  stat: path=/usr/local/include/fitsio.h
  register: cfitsio_include


- name: Check if {{ ccfits.file }} is installed
  stat: path=/usr/local/include/CCfits
  register: ccfits_include


- name: "Check if the cfitsio sources exist in the local repository"
  stat: path={{ local_repository_path }}/lib/{{ cfitsio.file }}
  delegate_to: 127.0.0.1
  register: cfitsio_sources


- name: "Check if the ccfits sources exist in the local repository"
  stat: path={{ local_repository_path }}/lib/{{ ccfits.file }}
  delegate_to: 127.0.0.1
  register: ccfits_sources


- name: Download {{ cfitsio.file }}
  get_url:
    url: ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/{{ cfitsio.file }}
    dest: "{{ local_repository_path }}/lib"
  when:
    - cfitsio_include.stat.exists == False
    - cfitsio_sources.stat.exists == False
  delegate_to: 127.0.0.1


- name: Download {{ ccfits.file }}
  get_url:
    url: http://heasarc.gsfc.nasa.gov/fitsio/CCfits-2.4/{{ ccfits.file }}
    dest: "{{ local_repository_path }}/lib"
  when:
    - ccfits_include.stat.exists == False
    - ccfits_sources.stat.exists == False
  delegate_to: 127.0.0.1


- name: Create a temporary directory for the libraries compilation
  file: path={{ remote_build_path }} state=directory


- name: Copy {{ cfitsio.file }} to the remote {{ remote_build_path }}
  unarchive:
    src={{ local_repository_path }}/lib/{{ cfitsio.file }}
    dest={{ remote_build_path }}
  when: cfitsio_include.stat.exists == False


- name: Install cfitsio
  command: chdir={{ remote_build_path }}/{{ cfitsio.build_dir }} {{ item }}
  with_items:
    - ./configure --prefix=/usr/local
    - make
    - sudo make install
  when: cfitsio_include.stat.exists == False


- name: Copy {{ ccfits.file }} to the remote {{ remote_build_path }}
  unarchive:
    src={{ local_repository_path }}/lib/{{ ccfits.file }}
    dest={{ remote_build_path }}
  when: ccfits_include.stat.exists == False


- name: Install CCfits
  command: chdir={{ remote_build_path }}/{{ ccfits.build_dir }} {{ item }}
  with_items:
    - ./configure --prefix=/usr/local
    - make
    - sudo make install
  when: ccfits_include.stat.exists == False


- name: Remove the directory used for the libraries compilation
  file: path={{ item }} state=absent
  with_items:
    - "{{ remote_build_path }}/{{ cfitsio.build_dir }}"
    - "{{ remote_build_path }}/{{ ccfits.build_dir }}"
