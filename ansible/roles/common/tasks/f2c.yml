---

- set_fact:
    f2c: { file: 'f2c', build_dir: 'f2c/src' }


- name: Check if {{ f2c.file }} is installed
  stat: path=/usr/local/include/f2c.h
  register: f2c_include


- name: Check if the {{ f2c.file }}  exists in the local repository
  stat: path={{ local_repository_path }}/lib/{{ f2c.file }}
  delegate_to: 127.0.0.1
  register: f2c_sources


- name: Download {{ f2c.file }}
  command: chdir={{ local_repository_path }}/lib {{ item }}
  with_items:
    - rsync -avz netlib.org::netlib/f2c/src {{ f2c.file }}
  when:
    - f2c_include.stat.exists == False
    - f2c_sources.stat.exists == False
  delegate_to: 127.0.0.1


- name: Create a temporary directory for the libraries compilation
  file: path={{ remote_build_path }} state=directory


- name: Copy {{ f2c.file }} to the remote {{ remote_build_path }}
  copy:
    src: "{{ local_repository_path }}/lib/{{ f2c.file }}"
    dest: "{{ remote_build_path }}"
    directory_mode: 0700
  when: f2c_include.stat.exists == False


- file:
    path: "{{ remote_build_path }}/{{ f2c.build_dir }}/xsum"
    mode: "a+x"
  when: f2c_include.stat.exists == False


- name: Compile f2c
  command: chdir={{ remote_build_path }}/{{ f2c.build_dir }} {{ item }}
  with_items:
    - cp makefile.u Makefile
    - make
  when: f2c_include.stat.exists == False


- name: Insall f2c
  become: True
  command: chdir={{ remote_build_path }}/{{ f2c.build_dir }} {{ item }}
  with_items:
    - cp f2c.h /usr/local/include
    - cp f2c /usr/local/bin
  when: f2c_include.stat.exists == False


- name: Remove the directory used for the libraries compilation
  file: path={{ item }} state=absent
  with_items:
    - "{{ remote_build_path }}/{{ f2c.build_dir }}"
