# The vncserver service unit file
#
# Quick HowTo:
# 1. Copy this file to /etc/systemd/system/vncserver@.service
# 2. Replace <USER> with the actual user name and edit vncserver
#    parameters in the wrapper script located in /usr/bin/vncserver_wrapper
# 3. Run `systemctl daemon-reload`
# 4. Run `systemctl enable vncserver@:<display>.service`
#
# DO NOT RUN THIS SERVICE if your local area network is
# untrusted!  For a secure way of using VNC, you should
# limit connections to the local host and then tunnel from
# the machine you want to view VNC on (host A) to the machine
# whose VNC output you want to view (host B)
#
# [user@hostA ~]$ ssh -v -C -L 590N:localhost:590M hostB
#
# this will open a connection on port 590N of your hostA to hostB's port 590M
# (in fact, it ssh-connects to hostB and then connects to localhost (on hostB).
# See the ssh man page for details on port forwarding)
#
# You can then point a VNC client on hostA at vncdisplay N of localhost and with
# the help of ssh, you end up seeing what hostB makes available on port 590M
#
# Use "-nolisten tcp" to prevent X connections to your VNC server via TCP.
#
# Use "-localhost" to prevent remote VNC clients connecting except when
# doing so through a secure tunnel.  See the "-via" option in the
# `man vncviewer' manual page.


[Unit]
Description=Remote desktop service (VNC)
After=syslog.target network.target

[Service]
Type=simple
ExecStart=/usr/sbin/runuser -l {{ item.value.name }} -c "/usr/bin/vncserver :{{ item.value.vnc_port_offset|int }} -name {{ inventory_hostname_short }}_{{ item.value.name }} -SecurityTypes None -geometry 1920x1080 -depth 32 -AlwaysShared -nolisten tcp {% if inventory_dir[inventory_dir.rfind('/')+1:] != 'development' %}-localhost {% endif %}-rfbport {{ vnc_starting_port+item.value.vnc_port_offset|int }}{% if fixed_resolution_vnc %}; /usr/local/bin/x11vnc -reflect localhost:{{ vnc_starting_port+item.value.vnc_port_offset|int }} -rfbport {{ vnc_starting_port+fixed_resolution_vnc_offset+item.value.vnc_port_offset|int }} -nopw -forever -shared -bg -noxdamage -nosetclipboard -noclipboard -nosetprimary -noprimary -o /var/log/x11vnc_{{ item.value.name }}.log {% if inventory_dir[inventory_dir.rfind('/')+1:] != 'development' %}-localhost {% endif %}-desktop {{ inventory_hostname_short}}_{{ item.value.name }}{% endif %}; :"
ExecStop=/usr/sbin/runuser -l {{ item.value.name }} -c "{% if fixed_resolution_vnc %}/usr/bin/pkill -s 9 -f 'x11vnc.*{{ inventory_hostname_short }}_{{ item.value.name }}'; {% endif %}/usr/bin/vncserver -kill :{{ item.value.vnc_port_offset|int }}; :"
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
