#!/usr/bin/env python
import subprocess
import os
import sys
import argparse
try:
    from urllib.request import urlopen, Request
except ImportError:
    from urllib2 import urlopen, Request
import json


parser = argparse.ArgumentParser()
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument(
    '-b',
    '--branch',
    nargs='?',
    const='master'
)
group.add_argument('-t', '--tag')
args = parser.parse_args()

choices_type = ''
if args.branch:
    choices_type = 'branches'
    args.target = args.branch
elif args.tag:
    choices_type = 'tags'
    args.target = args.tag

request = Request(
    'https://api.github.com/repos/discos/srt-single-dish-tools/%s' %
    choices_type
)
choices = json.loads(urlopen(request).read())
choices = [str(c.get('name')) for c in choices]

if args.target not in choices:
    msg = "ERROR: %s %s not found in remote repository!\nChoose between '%s'."
    if args.branch:
        msg = msg % ('branch', args.target, "', '".join(choices))
    elif args.tag:
        msg = msg % ('tag', args.target, "', '".join(choices))
    print(msg)
    sys.exit(1)

if os.geteuid() != 0:
    os.execvp('sudo', ['sudo', 'python3.6'] + sys.argv)

def become_discos():
    def set_ids():
        os.setgid({{ users_groups.acs }})
        os.setuid({{ user.uid }})
    return set_ids

current_dir = os.path.dirname(os.path.realpath(__file__))
sdtools_repo = 'srt-single-dish-tools'
sdtools_bin_dir = os.path.join(current_dir, 'bin')
sdtools_repo_dir = os.path.join(current_dir, sdtools_repo)
sdtools_repo_url = 'https://github.com/discos/%s.git' % sdtools_repo

subprocess.call(['rm', '-rf', sdtools_repo_dir])
subprocess.call(
    ['git',
    'clone',
    sdtools_repo_url,
    '--branch',
    args.target,
    '--single-branch'],
    cwd=current_dir,
    preexec_fn=become_discos()
)

subprocess.call(
    ['python3.6',
    'setup.py',
    'build'],
    cwd=sdtools_repo_dir,
    preexec_fn=become_discos()
)

subprocess.call(
    ['python3.6',
    'setup.py',
    'install',
    '--install-scripts=%s' % sdtools_bin_dir],
    cwd=sdtools_repo_dir
)

correction = \
"""#!/usr/bin/env python
import sys
if sys.version_info[0] != 3 or sys.version_info[1] != 6:
    import os
    if os.environ.get('PYTHONPATH'):
        del os.environ['PYTHONPATH']
    if os.environ.get('PATH'):
        del os.environ['PATH']
    os.execvp('/usr/bin/python3.6', ['python3.6'] + sys.argv)

"""

for filename in os.listdir(sdtools_bin_dir):
    og_lines = []
    for l in open(os.path.join(sdtools_bin_dir, filename)):
        if not l.startswith('#!') and not 'import sys' in l:
            og_lines.append(l)
    with open(os.path.join(sdtools_bin_dir, filename), 'w') as f:
        f.write(correction)
        for l in og_lines:
            f.write(l)

for filename in os.listdir(sdtools_bin_dir):
    subprocess.call(
        ['cp',
        os.path.join(sdtools_bin_dir, filename),
        os.path.join('/usr/bin/', filename)]
    )

subprocess.call(['rm', '-rf', sdtools_bin_dir])
