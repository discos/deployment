---

- name: Install ypserv yum package
  ansible.builtin.dnf:
    name: ypserv
    state: present


- name: Set yp securenets
  ansible.builtin.lineinfile:
    path: "/var/yp/securenets"
    state: present
    line: "{{ item }}"
    create: true
    mode: "0644"
  with_items:
    - "255.255.255.0 {{ network_ip_address.split('/')[0] }}"
    - "255.0.0.0 127.0.0.1"


- name: Comment yp Makefile original MINUID
  ansible.builtin.replace:
    path: "/var/yp/Makefile"
    regexp: '^(MINUID=\$.*)$'
    replace: '# \1'


- name: Fix the yp Makefile MINUID
  ansible.builtin.lineinfile:
    path: "/var/yp/Makefile"
    state: present
    line: "MINUID={{ observer.uid + 1 }}"
    insertbefore: "^MINGID.*"


- name: Start rpcbind service
  ansible.builtin.service:
    name: rpcbind
    state: started
    enabled: true


- name: Start ypserv service
  ansible.builtin.service:
    name: ypserv
    state: started
    enabled: true


- name: Start ypxfrd service
  ansible.builtin.service:
    name: ypxfrd
    state: started
    enabled: true


- name: Start yppasswdd
  ansible.builtin.service:
    name: yppasswdd
    state: started
    enabled: true


- name: Perform a backup of the ypinit script
  ansible.builtin.command: "cp /usr/lib64/yp/ypinit /usr/lib64/yp/ypinit.bak"
  changed_when: true


- name: Apply a patch to the ypinit script
  ansible.builtin.replace:
    path: '/usr/lib64/yp/ypinit'
    regexp: '{{ item.original }}'
    replace: '{{ item.new }}'
  with_items:
    - { original: ' while read h', new: ' while false' }
    - { original: ' read hostlist_ok', new: ' #read hostlist_ok' }


- name: Set up NIS maps
  ansible.builtin.command: "/usr/lib64/yp/ypinit -m"
  changed_when: true
