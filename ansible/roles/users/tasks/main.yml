---

- name: Create the /{{ discos_sw_dir }} directory
  file:
    path: "/{{ discos_sw_dir }}"
    state: directory
    mode: 0755


- name: Add the groups
  group:
    name: "{{ item.key }}"
    gid: "{{ item.value }}"
    state: present
  with_dict: "{{ users_groups }}"


- name: Add {{ user.name}} group alias
  group:
    name: "{{ user.name }}"
    gid: "{{ user.group }}"
    non_unique: yes
    state: present


- name: Add the users
  user:
    name: "{{ item.value.name }}"
    password: "{{ item.value.password }}"
    group: "{{ item.value.group }}"
    groups: "{{ item.value.groups | default('') }}"
    uid: "{{ item.value.uid }}"
    home: "/{{ discos_sw_dir }}/{{ item.value.name }}"
    state: present
    generate_ssh_key: yes
    ssh_key_file: .ssh/id_rsa
  no_log: True
  with_dict: "{{ users }}"
  when: item.value.password is defined


- name: Tune the /{{ discos_sw_dir }} directory ownership
  file:
    path: "/{{ discos_sw_dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"


- name: Create the /{{ discos_sw_dir }}/service directory
  file:
    path: "/{{ discos_sw_dir }}/service"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"


- name: Create a symbolic lint to /{{ discos_sw_dir }}/service
  file:
    src: "/{{ discos_sw_dir }}/service"
    dest: "/service"
    state: link
    owner: "{{ user.name }}"
    group: "{{ user.group }}"


- name: Give administrator permissions
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: '{{ item.value.name }}    ALL=(ALL)       ALL'
  no_log: True
  with_dict: "{{ users }}"
  when: item.value.administrator == True


- name: Create the DISCOS {{ archive }} directory
  file:
    path: /{{ archive }}
    state: directory
    owner: "{{ user.name }}"
    group: "{{ users_groups.projects }}"
    mode: 0755
