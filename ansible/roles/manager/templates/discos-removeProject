#! /bin/bash
# ********************************************************************************************* 
# IRA Istituto di Radioastronomia                                                                      
#
# This code is under GNU General Public Licence (GPL).                                              
#                                                                                                     
# Who                                 when            What                                             
# Andrea Orlati(aorlati@ira.inaf.it)  12/02/2011      Creation           
# Andrea Orlati(aorlati@ira.inaf.it)  11/01/2013      Adapted to environment of escs 0.3                 
# Andrea Orlati)andrea.orlati@inaf.it)13/08/2018      ported to discos environment
# Andrea Orlati)andrea.orlati@inaf.it)03/08/2018      support for localhost, i.e. in case of test environment
#*********************************************************************************************
#   NAME
# 
#   SYNOPSIS
# 
#   DESCRIPTION
#   This script removes a user/project for the discos observing system. It could be executed only by the system manager on 
#   system management machine. It tagets the serve providing authetication for the users (nis server).
#   The manager must have sudoers grants for bash commands userdel. For that reason it is recommended to create 
#   the sudoers grants for manager on user server machine only.
#       
#   FILES
#
#   ENVIRONMENT
#
#   RETURN VALUES
#
#   CAUTIONS
#
#   EXAMPLES
#
#   SEE ALSO
#
#   BUGS     
#

function printUsage {
    echo "Removes a user/project from the ESCS observing system\n"
    echo "Usage: `basename $0` -u|--user project [-l|--login serverLogin] [-s|--server serverAdder]\n"
    echo "-u|--user allows to give the name of the project to be deleted"
    echo "[-l|--login] provides the account to be used to login into authentication server. If not given internal default is used"
    echo "[-s|--server] provides the authentication server address. If not given the internal default is used"
}

CL_HELP=
CL_USER=
CL_USER=
CL_SERVER=
  
LONGOPTS=help,user,login,server:
SHORTOPTS=hu:l:s:

SERVERUSER={{ user }}
{% if nis_server_ip is defined %}
SERVER={{ nis_server_ip }}
{% else %}
SERVER=localhost
{% endif %}

getopt -n `basename $0` -Q -u -a -l $LONGOPTS $SHORTOPTS "$@" || {
    printUsage
    exit
}
set -- `getopt -u -a -l $LONGOPTS $SHORTOPTS "$@"`


#
# Iterate over getopt's output and set CL_XXX variables accordingly
#
while : 
do
    case "$1" in
        --help)             CL_HELP=true ;;
        -h)                 CL_HELP=true ;;
        --user)             CL_USER=$2 ; shift ;;
        -u)                 CL_USER=$2 ; shift ;;
        --login)            CL_LOGIN=$2 ; shift ;;
        -l)                 CL_LOGIN=$2 ; shift ;;
        --server)           CL_SERVER=$2 ; shift ;;
        -s)                 CL_SERVER=$2 ; shift ;;
        --) break ;;
    esac
    shift
done
shift

if [ "$CL_HELP" ]; then
    printUsage
    exit
fi
 
if [ ! -n "$CL_USER" ]; then
    echo "%%%% user name is mandatory!"
    echo 
    printUsage
    exit
fi

read -p "**** remove project "$CL_USER" and all its related files?" yn
case $yn in
        [Yy]* ) echo ;;
            * ) echo "**** bye!"; exit;;
esac

if [ "$CL_SERVER" ]; then
    SERVER=$CL_SERVER
fi

if [ "$CL_LOGIN" ]; then
    SERVERUSER=$CL_LOGIN
fi

ADDRESSES=$(hostname -I)
LO=" 127.0.0.1"
HOSTADDRESSES=$(echo $ADDRESSES | tr " " "\n")$LO

REMOTESERVER="YES"

for x in $HOSTADDRESSES
do
    if [ "$SERVER" == "$x" ]; then
        REMOTESERVER="NO"
    fi
done

echo "**** please type password for user "$SERVERUSER" for the authentication server "$SERVER" :"
read -r -s PASSWORD

if [ "$REMOTESERVER" == "YES" ]; then
    echo "**** deleting the remote user......"
    sshpass -p $PASSWORD ssh -t $SERVERUSER@$SERVER "echo $PASSWORD | sudo -S /usr/sbin/userdel -r $CL_USER"
    echo "**** done"
    echo "**** update yellow pages......"
    sshpass -p $PASSWORD ssh -t $SERVERUSER@$SERVER "echo $PASSWORD | sudo -S /usr/lib64/yp/ypinit -m"
    echo $PASSWORD | sudo -S /sbin/service ypbind stop
    sleep 1s
    sshpass -p $PASSWORD ssh -t $SERVERUSER@$SERVER "echo $PASSWORD | sudo -S systemctl restart ypserv"
    sleep 2s
    echo $PASSWORD | sudo -S /sbin/service ypbind start
else
    echo "**** deleting the local user......"
    echo $PASSWORD | sudo -S /usr/sbin/userdel -r $CL_USER
fi

echo "**** clean up the related folders....."
rm -rf /archive/data/$CL_USER
rm -rf /archive/schedules/$CL_USER
rm -rf /archive/extraData/$CL_USER
echo $PASSWROD | sudo -S rm -rf /home/$CL_USER
echo "**** done!"
echo "****... all done, user "$CL_USER" is no more"

#
# ___oOo___
