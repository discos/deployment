---

- name: Populate the /{{ archive }} directory tree
  ansible.builtin.file:
    path: "/{{ archive }}/{{ item.path }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    recurse: false
    follow: true
  with_items:
    - { path: "data", group: "{{ users_groups.projects }}", mode: "0710" }
    - { path: "extraData", group: "{{ users_groups.projects }}", mode: "0710" }
    - { path: "events", group: "{{ users_groups.acs }}", mode: "0750" }
    - { path: "logs", group: "{{ users_groups.projects }}", mode: "0750" }
    - { path: "schedules", group: "{{ users_groups.projects }}", mode: "0710" }


- name: Set ACLs for the /{{ archive }} directory tree
  ansible.posix.acl:
    path: "/{{ archive }}/{{ item[0] }}"
    entry: "default:{{ item[1] }}"
    state: present
  with_nested:
    - ["data", "extraData", "schedules"]
    - ["user::rwx", "group::---"]


- name: Render the discos-logrotate template
  ansible.builtin.template:
    src: discos-logrotate
    dest: "/{{ discos_sw_dir }}/config/misc/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0644"
    force: true


- name: Create the /service/events directory
  ansible.builtin.file:
    path: "/service/events"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0755"


- name: Activate the crontab job for ACS log rotation
  ansible.builtin.cron:
    name: discos-logrotate
    hour: "23"
    minute: "59"
    user: "{{ user.name }}"
    job: "/usr/sbin/logrotate -f /{{ discos_sw_dir }}/config/misc/discos-logrotate"
