---

- name: Populate the {{ discos_sw_dir }} directory tree
  file:
    path: "/{{ discos_sw_dir }}/{{ item.path }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "{{ item.mode }}"
    follow: True
  with_items:
    - { path: "config", mode: "0750" }
    - { path: "config/misc", mode: "0750" }
    - { path: "introots", mode: "0711" }


- name: Copy the bashrc template
  template:
    src: bashrc
    dest: "/{{ discos_sw_dir }}/config/misc/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0640
    force: True


- name: Copy the bash_profile template
  template:
    src: bash_profile
    dest: "/{{ discos_sw_dir }}/config/misc/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0640
    force: True


- name: Copy prompt_command.sh
  template:
    src: prompt_command.sh
    dest: "/{{ discos_sw_dir }}/config/misc/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0640
    force: True


- name: Create the branches file
  file:
    path: "/{{ discos_sw_dir }}/config/misc/branches"
    state: touch
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0640
 
 
- name: Copy the load_branch template
  template:
    src: load_branch
    dest: "/{{ discos_sw_dir }}/config/misc/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0640
    force: False


- name: Create the station file
  lineinfile:
    path: "/{{ discos_sw_dir }}/config/misc/station"
    line: "{{ item }}"
    state: present
    create: True
    mode: 0644
  loop:
    - "#!/usr/bin/env bash"
    - ""
    - "export STATION={{ station }}"
  when: inventory_dir.split('/')[-1] != 'development'
 
 
- name: Create the /bin directory for user {{ user.name }}
  file:
    path: "/{{ discos_sw_dir }}/{{ user.name }}/bin"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0700
 
 
- name: Render the discos-get template
  template:
    src: discos-get
    dest: "/{{ discos_sw_dir }}/{{ user.name }}/bin/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0500
    force: True


- name: Render the discos-set template
  template:
    src: discos-set
    dest: "/{{ discos_sw_dir }}/{{ user.name }}/bin/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0500
    force: True
 
 
- name: Render the _discos-check-branch template
  template:
    src: _discos-check-branch
    dest: "/{{ discos_sw_dir }}/{{ user.name }}/bin/"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0500
    force: True


- name: Copy the pyrc template
  template:
    src: pyrc
    dest: "/{{ discos_sw_dir }}/{{ item.value.name }}/.pyrc"
    owner: "{{ item.value.name }}"
    group: "{{ item.value.group }}"
    mode: 0600
  no_log: True
  with_dict: "{{ users }}"


- name: Copy vimrc
  template:
    src: vimrc
    dest: "/{{ discos_sw_dir }}/{{ item.value.name }}/.vimrc"
    owner: "{{ item.value.name }}"
    group: "{{ item.value.group }}"
    mode: 0600
  no_log: True
  with_dict: "{{ users }}"


- name: Add the custom bashrc sourcing to the default one
  blockinfile:
    path: "/{{ discos_sw_dir }}/{{ item.value.name }}/.bashrc"
    state: present
    marker: "######## DISCOS configuration {mark} ########"
    block: |
        if [ -f /{{ discos_sw_dir }}/config/misc/bashrc ]; then
            source /{{ discos_sw_dir }}/config/misc/bashrc
        fi
  no_log: True
  with_dict: "{{ users }}"


- name: Add the custom bash_profile sourcing to the default one
  blockinfile:
    path: "/{{ discos_sw_dir }}/{{ item.value.name }}/.bash_profile"
    state: present
    marker: "######## DISCOS configuration {mark} ########"
    block: |
        if [ -f /{{ discos_sw_dir }}/config/misc/bash_profile ]; then
            source /{{ discos_sw_dir }}/config/misc/bash_profile
        fi
    insertafter: "# .bash_profile"
  no_log: True
  with_dict: "{{ users }}"


- name: Source scl_source
  lineinfile:
    dest: /etc/profile
    line: 'source scl_source enable devtoolset-{{ devtoolset_release }}'
