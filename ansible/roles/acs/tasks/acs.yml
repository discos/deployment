---

- name: Check in which path Java is installed
  shell: "readlink -f $(which java)"
  register: java_home


- name: Make sure /usr/java directory exists
  file:
    path: "/usr/java"
    state: directory


- name: Create a symlink to the correct Java home path, needed by ACS
  file:
    src: "/usr/lib/jvm/java-openjdk"
    dest: "/usr/java/default"
    state: link


- name: Create the /alma directory
  file:
    path: "/alma"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"


- name: Check if ACS is already installed
  find:
    paths: /alma
    file_type: directory
    patterns: "ACS*"
  register: target_dir


- name: Create a temporary directory for the build
  file:
    path: "{{ remote_build_path }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0770
    recurse: True
  when: target_dir.matched|int == 0


- name: Download the ACS repository
  git:
    repo: "https://bitbucket.alma.cl/scm/asw/acs.git"
    dest: "{{ remote_build_path }}/acs"
    version: "acs/2021DEC"
    track_submodules: yes
    force: yes
  become: True
  become_user: "{{ user.name }}"
  when: target_dir.matched|int == 0


- name: Get missing (super old) libraries
  get_url:
    url: "{{ item }}"
    dest: "{{ remote_build_path }}/acs/ExtProd/PRODUCTS/"
    validate_certs: no
  with_items:
    - "https://sourceforge.net/projects/gnuplot-py/files/Gnuplot-py/1.8/gnuplot-py-1.8.tar.gz/download"
    - "https://sourceforge.net/projects/pychecker/files/pychecker/0.8.17/pychecker-0.8.17.tar.gz/download"
    - "https://sourceforge.net/projects/numpy/files/OldFiles/1.3.3/numarray-1.3.3.tar.gz"
  become: True
  become_user: "{{ user.name }}"
  when: target_dir.matched|int == 0


- name: Install ACS ExtProd
  shell: 'source {{ remote_build_path }}/acs/LGPL/acsBUILD/config/.acs/.bash_profile.acs && make all && find /alma -name "*.o" -exec rm -v {} \;'
  args:
    chdir: "{{ remote_build_path }}/acs/ExtProd/INSTALL"
  become: True
  become_user: "{{ user.name }}"
  when: target_dir.matched|int == 0


#########################
# Apply some patch to ACS
#########################

- include: "{{ patch_file }}"
  vars:
    params:
      files:
        - "patches/{{ acs_tag }}.yml"
  loop: "{{ q('first_found', params, errors='ignore') }}"
  loop_control:
    loop_var: patch_file
  when: target_dir.matched|int == 0


- name: Launch buildDDS
  shell: 'source {{ remote_build_path }}/acs/LGPL/acsBUILD/config/.acs/.bash_profile.acs && ./buildDDS'
  args:
    chdir: "{{ remote_build_path }}/acs/ExtProd/INSTALL"
  become: True
  become_user: "{{ user.name }}"
  when: target_dir.matched|int == 0


- name: Build external dependencies
  shell: 'source {{ remote_build_path }}/acs/LGPL/acsBUILD/config/.acs/.bash_profile.acs && make build'
  args:
    chdir: "{{ remote_build_path }}/acs"
  become: True
  become_user: "{{ user.name }}"
  when: target_dir.matched|int == 0


- name: Remove the ACS boost directory
  file:
    path: "/alma/{{ acs_tag }}/boost"
    state: absent
  become: True
  become_user: "{{ user.name }}"


- name: Remove the directory used for the build
  file:
    path: "{{ remote_build_path }}"
    state: absent


################################
# Set the ACS user's environment
################################


- name: Copy the .acs dir from /alma to /{{ discos_sw_dir }}/config
  command: "cp -r .acs /{{ discos_sw_dir }}/config/acs"
  become: True
  become_user: "{{ user.name }}"
  args:
    chdir: "{{ acssw }}/config"


- name: Create the acstmp directory
  file:
    path: "/service/acstmp/{{ inventory_hostname_short }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: 0755
    recurse: True


- name: Set the default python version to 2.7
  shell: "pyenv global 2.7.16"
  become: True
  become_user: "{{ user.name }}"
  become_flags: "-i"


#- name: Copy the acsStartContainer with debugger
#  template:
#    src: acsStartContainerGdb
#    dest: "/alma/{{ acs_tag }}/ACSSW/bin/"
#    owner: "{{ user.name }}"
#    group: "{{ user.group }}"
#    mode: 0755
#  become: True
#  become_user: "{{ user.name }}"


#- name: Copy some system Python libraries into ACS path
#  copy:
#    src: "/usr/lib64/python2.7/lib-dynload/{{ item }}"
#    dest: "/alma/{{ acs_tag }}/Python/lib/python2.7/lib-dynload/"
#    remote_src: True
#  with_items:
#    - "bz2.so"
#    - "_sqlite3.so"
#  become: True
#  become_user: "{{ user.name }}"


##################################
# Load ACS libraries to the system
##################################


- name: Add ACS libraries to ld.so configuration
  lineinfile:
    path: "/etc/ld.so.conf.d/acs.conf"
    line: "{{ item }}"
    state: present
    create: True
  with_items:
    - "/alma/{{ acs_tag }}/ACSSW/lib"
    - "/alma/{{ acs_tag }}/TAO/ACE_wrappers/build/linux/lib"
    - "/alma/{{ acs_tag }}/Python/lib"


- name: Load the ACS libraries to the system
  command: ldconfig
