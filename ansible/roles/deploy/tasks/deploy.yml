---

- set_fact:
    discos_get_cmd: "discos-get"

- set_fact:
    repo_name: "{{ branch }}"
    discos_get_cmd: "{{ discos_get_cmd }} -b {{ branch }}"
  when: branch is defined

- set_fact:
    repo_name: "{{ tag }}"
    discos_get_cmd: "{{ discos_get_cmd }} -t {{ tag }}"
  when: tag is defined

- set_fact:
    repo_name: "{{ repo_name }}-{{ station|lower }}"
    discos_get_cmd: "{{ discos_get_cmd }} -s {{ station|lower }}"
  when: inventory_dir.split('/')[-1] == 'development'

- set_fact:
    sources_path: "/{{ discos_sw_dir }}/{{ user.name }}/{{ repo_name }}"
    introot_path: "/{{ discos_sw_dir }}/introots/{{ repo_name }}"

- name: Remove the repository directory and introot (if present)
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ sources_path }}"
    - "{{ introot_path }}"


- name: Clone the selected DISCOS branch repository
  command: "{{ discos_get_cmd }}"
  become: True
  become_user: "{{ user.name }}"
  become_flags: "-i"


- name: Set the correct CDB
  command: "discos-set --cdb {{ cdb }} {{ repo_name }}"
  become: True
  become_user: "{{ user.name }}"
  become_flags: "-i"


- name: Install DISCOS
  shell: "source ~/.bashrc && {{ item }}"
  args:
    chdir: "{{ sources_path }}/SystemMake"
  with_items:
    - make
    - make install
  become: True
  become_user: "{{ user.name }}"
  become_flags: "-i"
