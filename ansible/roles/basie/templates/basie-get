#!/usr/bin/env python
import subprocess
import os
import sys
import argparse
try:
    from urllib.request import urlopen, Request
except ImportError:
    from urllib2 import urlopen, Request
import json


parser = argparse.ArgumentParser()
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument(
    '-b',
    '--branch',
    nargs='?',
    const='stable'
)
group.add_argument('-t', '--tag')
args = parser.parse_args()

choices_type = ''
if args.branch:
    choices_type = 'branches'
    args.target = args.branch
elif args.tag:
    choices_type = 'tags'
    args.target = args.tag

request = Request(
    'https://api.github.com/repos/discos/basie/%s' % choices_type
)
choices = json.loads(urlopen(request).read())
choices = [str(c.get('name')) for c in choices]

if args.target not in choices:
    msg = "ERROR: %s %s not found in remote repository!\nChoose between '%s'."
    if args.branch:
        msg = msg % ('branch', args.target, "', '".join(choices))
    elif args.tag:
        msg = msg % ('tag', args.target, "', '".join(choices))
    print(msg)
    sys.exit(1)

current_dir = os.path.dirname(os.path.realpath(__file__))
basie_repo = 'basie'
basie_bin_dir = os.path.join(current_dir, 'bin')
basie_repo_dir = os.path.join(current_dir, basie_repo)
basie_repo_url = 'https://github.com/discos/%s.git' % basie_repo

subprocess.call(['rm', '-rf', basie_repo_dir])
subprocess.call(
    ['git',
    'clone',
    basie_repo_url,
    '--branch',
    args.target,
    '--single-branch'],
    cwd=current_dir
)

subprocess.call(
    ['pip',
    'install',
    '-r',
    'requirements.txt'],
    cwd=basie_repo_dir
)

subprocess.call(
    ['python',
    'setup.py',
    'install'],
    cwd=basie_repo_dir
)
